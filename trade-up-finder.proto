syntax = "proto3";

package trade_up_finder;

option go_package = "./tradeUpFinderClient";

enum SkinRarity {
  CONSUMER = 0;
  INDUSTRIAL = 1;
  MIL_SPEC = 2;
  RESTRICTED = 3;
  CLASSIFIED = 4;
  COVERT = 5;
}

message CommonOptions {
  repeated string allowed_collections = 1;
  repeated SkinRarity allowed_rarities = 2;

  bool allow_stat_trak = 4;
  bool allow_non_stat_trak = 5;

  double min_profit = 6;
  double min_profit_percent = 7;

  enum Sort {
    BY_PROFIT = 0;
    BY_PROFIT_PERCENT = 1;
  }
  Sort sort = 8;
}

message BorderForRangesSearchOptions {
  double float_delta = 1;
  double times_float_delta = 2;
}

message PredictedTradeUpFinderOptions {
  double float_delta = 1;
  double times_float_delta = 2;
  int32 min_present_listings = 3;
  double min_present_listings_percent = 4;
}

message TradeUpRequest {
  int32 max_trade_up_cnt = 1;
  CommonOptions common_algorithm_options = 2;
  oneof algorithmOptions {
    BorderForRangesSearchOptions border_for_ranges_search_options = 3;
    PredictedTradeUpFinderOptions predicted_trade_up_finder_options = 4;
  }
}

//==============================================================================

message MarketListing {
  string hash_name = 1;
  string market_id = 2;
  double float_value = 3;
  int32 price = 4;
}

message JokerListing {
  string collection_name = 1;
  SkinRarity rarity = 2;

  message FloatRange {
    double lower = 1;
    double upper = 2;
  }
  FloatRange float_value_range = 3;

  int32 max_price = 4;
}

message Listing {
  oneof listing {
    MarketListing market_listing = 1;
    JokerListing joker_listing = 2;
  }
}

message Outcome {
  string hash_name = 1;
  int32 price = 2;
  double float_value = 3;
  double probability = 4;
}

message TradeUp {
  int32 inputs_price = 1;
  double profit = 2;
  double profit_percent = 3;
  repeated Listing listings = 4;
  repeated Outcome outcomes = 5;
}

message TradeUpResponse {
  repeated TradeUp trade_ups = 1;
}

//==============================================================================

message BuyListingsRequest {
  repeated MarketListing listings = 1;
}

message RequestListingsRequest {
  repeated JokerListing listings = 1;
}
